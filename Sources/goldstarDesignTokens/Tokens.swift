
//
// Tokens.swift
//

// Do not edit directly
// Generated on Fri, 03 Feb 2023 21:52:07 GMT


import UIKit

public enum Tokens {
    public static let coreBasic0 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let coreBasic10 = UIColor(red: 0.918, green: 0.918, blue: 0.925, alpha: 1)
    public static let coreBasic100 = UIColor(red: 0.043, green: 0.043, blue: 0.063, alpha: 1)
    public static let coreBasic20 = UIColor(red: 0.835, green: 0.835, blue: 0.851, alpha: 1)
    public static let coreBasic30 = UIColor(red: 0.753, green: 0.753, blue: 0.776, alpha: 1)
    public static let coreBasic40 = UIColor(red: 0.671, green: 0.671, blue: 0.698, alpha: 1)
    public static let coreBasic50 = UIColor(red: 0.588, green: 0.588, blue: 0.624, alpha: 1)
    public static let coreBasic60 = UIColor(red: 0.392, green: 0.388, blue: 0.455, alpha: 1)
    public static let coreBasic70 = UIColor(red: 0.239, green: 0.235, blue: 0.318, alpha: 1)
    public static let coreBasic80 = UIColor(red: 0.173, green: 0.173, blue: 0.247, alpha: 1)
    public static let coreBasic90 = UIColor(red: 0.090, green: 0.086, blue: 0.122, alpha: 1)
    public static let coreBlue10 = UIColor(red: 0.898, green: 0.953, blue: 1.000, alpha: 1)
    public static let coreBlue100 = UIColor(red: 0.098, green: 0.145, blue: 0.188, alpha: 1)
    public static let coreBlue20 = UIColor(red: 0.800, green: 0.906, blue: 1.000, alpha: 1)
    public static let coreBlue30 = UIColor(red: 0.451, green: 0.737, blue: 1.000, alpha: 1)
    public static let coreBlue40 = UIColor(red: 0.271, green: 0.647, blue: 1.000, alpha: 1)
    public static let coreBlue50 = UIColor(red: 0.086, green: 0.561, blue: 1.000, alpha: 1)
    public static let coreBlue60 = UIColor(red: 0.000, green: 0.522, blue: 1.000, alpha: 1)
    public static let coreBlue70 = UIColor(red: 0.000, green: 0.416, blue: 0.800, alpha: 1)
    public static let coreBlue80 = UIColor(red: 0.000, green: 0.314, blue: 0.600, alpha: 1)
    public static let coreBlue90 = UIColor(red: 0.098, green: 0.196, blue: 0.282, alpha: 1)
    public static let coreGreen10 = UIColor(red: 0.898, green: 0.973, blue: 0.922, alpha: 1)
    public static let coreGreen100 = UIColor(red: 0.000, green: 0.145, blue: 0.039, alpha: 1)
    public static let coreGreen20 = UIColor(red: 0.800, green: 0.945, blue: 0.839, alpha: 1)
    public static let coreGreen30 = UIColor(red: 0.455, green: 0.878, blue: 0.573, alpha: 1)
    public static let coreGreen40 = UIColor(red: 0.271, green: 0.835, blue: 0.427, alpha: 1)
    public static let coreGreen50 = UIColor(red: 0.090, green: 0.796, blue: 0.286, alpha: 1)
    public static let coreGreen60 = UIColor(red: 0.000, green: 0.729, blue: 0.204, alpha: 1)
    public static let coreGreen70 = UIColor(red: 0.000, green: 0.584, blue: 0.165, alpha: 1)
    public static let coreGreen80 = UIColor(red: 0.000, green: 0.439, blue: 0.122, alpha: 1)
    public static let coreGreen90 = UIColor(red: 0.000, green: 0.290, blue: 0.082, alpha: 1)
    public static let coreOpacity30Black = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let coreOpacity30White = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let coreOpacity50Black = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let coreOpacity50White = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let coreOpacity80Black = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let coreOrange10 = UIColor(red: 1.000, green: 0.961, blue: 0.914, alpha: 1)
    public static let coreOrange100 = UIColor(red: 0.188, green: 0.153, blue: 0.106, alpha: 1)
    public static let coreOrange20 = UIColor(red: 0.996, green: 0.906, blue: 0.800, alpha: 1)
    public static let coreOrange30 = UIColor(red: 1.000, green: 0.698, blue: 0.341, alpha: 1)
    public static let coreOrange40 = UIColor(red: 0.980, green: 0.620, blue: 0.200, alpha: 1)
    public static let coreOrange50 = UIColor(red: 0.980, green: 0.573, blue: 0.098, alpha: 1)
    public static let coreOrange60 = UIColor(red: 0.976, green: 0.525, blue: 0.000, alpha: 1)
    public static let coreOrange70 = UIColor(red: 0.800, green: 0.498, blue: 0.141, alpha: 1)
    public static let coreOrange80 = UIColor(red: 0.780, green: 0.420, blue: 0.000, alpha: 1)
    public static let coreOrange90 = UIColor(red: 0.282, green: 0.208, blue: 0.118, alpha: 1)
    public static let corePurple10 = UIColor(red: 0.957, green: 0.918, blue: 0.992, alpha: 1)
    public static let corePurple100 = UIColor(red: 0.149, green: 0.114, blue: 0.184, alpha: 1)
    public static let corePurple20 = UIColor(red: 0.910, green: 0.835, blue: 0.984, alpha: 1)
    public static let corePurple30 = UIColor(red: 0.671, green: 0.380, blue: 0.961, alpha: 1)
    public static let corePurple40 = UIColor(red: 0.635, green: 0.337, blue: 0.929, alpha: 1)
    public static let corePurple50 = UIColor(red: 0.588, green: 0.227, blue: 0.949, alpha: 1)
    public static let corePurple60 = UIColor(red: 0.545, green: 0.173, blue: 0.914, alpha: 1)
    public static let corePurple70 = UIColor(red: 0.471, green: 0.180, blue: 0.761, alpha: 1)
    public static let corePurple80 = UIColor(red: 0.435, green: 0.137, blue: 0.729, alpha: 1)
    public static let corePurple90 = UIColor(red: 0.200, green: 0.129, blue: 0.271, alpha: 1)
    public static let coreRed10 = UIColor(red: 1.000, green: 0.906, blue: 0.933, alpha: 1)
    public static let coreRed100 = UIColor(red: 0.200, green: 0.016, blue: 0.031, alpha: 1)
    public static let coreRed20 = UIColor(red: 1.000, green: 0.812, blue: 0.867, alpha: 1)
    public static let coreRed30 = UIColor(red: 1.000, green: 0.435, blue: 0.604, alpha: 1)
    public static let coreRed40 = UIColor(red: 1.000, green: 0.247, blue: 0.475, alpha: 1)
    public static let coreRed50 = UIColor(red: 1.000, green: 0.059, blue: 0.341, alpha: 1)
    public static let coreRed60 = UIColor(red: 1.000, green: 0.071, blue: 0.149, alpha: 1)
    public static let coreRed70 = UIColor(red: 0.800, green: 0.055, blue: 0.118, alpha: 1)
    public static let coreRed80 = UIColor(red: 0.600, green: 0.043, blue: 0.090, alpha: 1)
    public static let coreRed90 = UIColor(red: 0.400, green: 0.027, blue: 0.059, alpha: 1)
    public static let coreSeatMapAvailable = UIColor(red: 0.745, green: 0.827, blue: 0.886, alpha: 1)
    public static let coreSeatMapChartBg = UIColor(red: 0.906, green: 0.918, blue: 0.929, alpha: 1)
    public static let coreSeatMapHover = UIColor(red: 0.447, green: 0.639, blue: 0.776, alpha: 1)
    public static let coreSeatMapSelected = UIColor(red: 0.149, green: 0.475, blue: 0.710, alpha: 1)
    public static let coreSeatMapUnavailable = UIColor(red: 0.898, green: 0.910, blue: 0.922, alpha: 1)
    public static let coreTransparentTransparent = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let globalBorderRadiusLg = CGFloat(8)
    public static let globalBorderRadiusSm = CGFloat(4)
    public static let globalBorderRadiusXl = CGFloat(16)
    public static let globalBorderWidthLg = CGFloat(8)
    public static let globalBorderWidthMd = CGFloat(4)
    public static let globalBorderWidthNone = CGFloat(0)
    public static let globalBorderWidthSm = CGFloat(2)
    public static let globalBorderWidthXs = CGFloat(1)
    public static let globalFontFamiliesBody = "Aktiv Grotesk App"
    public static let globalFontFamiliesHeading = "Gellix"
    public static let globalFontSizeMediumBase = CGFloat(18)
    public static let globalFontSizeMediumBodyPrimary = CGFloat(18)
    public static let globalFontSizeMediumBodySecondary = CGFloat(16)
    public static let globalFontSizeMediumBodyTertiary = CGFloat(14)
    public static let globalFontSizeMediumH1 = CGFloat(56)
    public static let globalFontSizeMediumH2 = CGFloat(45)
    public static let globalFontSizeMediumH3 = CGFloat(36)
    public static let globalFontSizeMediumH4 = CGFloat(29)
    public static let globalFontSizeMediumH5 = CGFloat(23)
    public static let globalFontSizeMediumH6 = CGFloat(23)
    public static let globalFontSizeMediumH7 = CGFloat(21)
    public static let globalFontSizeMediumScale = CGFloat(1.25)
    public static let globalFontSizeSmallBase = CGFloat(16)
    public static let globalFontSizeSmallBodyPrimary = CGFloat(16)
    public static let globalFontSizeSmallBodySecondary = CGFloat(14)
    public static let globalFontSizeSmallBodyTertiary = CGFloat(12)
    public static let globalFontSizeSmallH1 = CGFloat(49)
    public static let globalFontSizeSmallH2 = CGFloat(39)
    public static let globalFontSizeSmallH3 = CGFloat(31)
    public static let globalFontSizeSmallH4 = CGFloat(25)
    public static let globalFontSizeSmallH5 = CGFloat(20)
    public static let globalFontSizeSmallH6 = CGFloat(20)
    public static let globalFontSizeSmallH7 = CGFloat(18)
    public static let globalFontSizeSmallScale = CGFloat(1.25)
    public static let globalFontWeightsBodyBold = CGFloat(700)
    public static let globalFontWeightsBodyRegular = CGFloat(400)
    public static let globalFontWeightsHeadingBold = CGFloat(700)
    public static let globalFontWeightsHeadingRegular = CGFloat(400)
    public static let globalLetterSpacingDefault = CGFloat(0)
    public static let globalLetterSpacingIncreased = CGFloat(0.01)
    public static let globalLineHeightsBodyMedium = CGFloat(1.6)
    public static let globalLineHeightsBodySmall = CGFloat(1.6)
    public static let globalLineHeightsHeading = CGFloat(1.25)
    public static let globalLineHeightsTextField = CGFloat(1.25)
    public static let globalLink = "underline"
    public static let globalParagraphSpacingH1 = CGFloat(32)
    public static let globalParagraphSpacingH2 = CGFloat(26)
    public static let globalSizingLg = CGFloat(13.5)
    public static let globalSizingMd = CGFloat(9)
    public static let globalSizingScale = CGFloat(1.5)
    public static let globalSizingSm = CGFloat(6)
    public static let globalSizingXl = CGFloat(20.25)
    public static let globalSizingXs = CGFloat(4)
    public static let globalSpacingLg = CGFloat(32)
    public static let globalSpacingMd = CGFloat(16)
    public static let globalSpacingScale = CGFloat(2)
    public static let globalSpacingSm = CGFloat(8)
    public static let globalSpacingXl = CGFloat(64)
    public static let globalSpacingXs = CGFloat(4)
    public static let globalXxl = CGFloat(24)
    public static let ttgLightBackgroundBackground = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let ttgLightBackgroundBackgroundHover = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let ttgLightBackgroundBackgroundInverse = UIColor(red: 0.090, green: 0.086, blue: 0.122, alpha: 1)
    public static let ttgLightBackgroundBackgroundInverseHover = UIColor(red: 0.173, green: 0.173, blue: 0.247, alpha: 1)
    public static let ttgLightBorderBorderDisabled = UIColor(red: 0.753, green: 0.753, blue: 0.776, alpha: 1)
    public static let ttgLightBorderBorderInverse = UIColor(red: 0.043, green: 0.043, blue: 0.063, alpha: 1)
    public static let ttgLightBorderBorderStrong01 = UIColor(red: 0.588, green: 0.588, blue: 0.624, alpha: 1)
    public static let ttgLightBorderBorderSubtle01 = UIColor(red: 0.835, green: 0.835, blue: 0.851, alpha: 1)
    public static let ttgLightButtonButtonDisabled = UIColor(red: 0.835, green: 0.835, blue: 0.851, alpha: 1)
    public static let ttgLightButtonButtonPrimaryHover = UIColor(red: 0.600, green: 0.043, blue: 0.090, alpha: 1)
    public static let ttgLightButtonButtonSecondary = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let ttgLightButtonButtonSecondaryHover = UIColor(red: 0.753, green: 0.753, blue: 0.776, alpha: 1)
    public static let ttgLightButtonButtonTertiary = UIColor(red: 0.671, green: 0.671, blue: 0.698, alpha: 1)
    public static let ttgLightButtonButtonTertiaryActive = UIColor(red: 0.043, green: 0.043, blue: 0.063, alpha: 1)
    public static let ttgLightButtonButtonTertiaryHover = UIColor(red: 0.239, green: 0.235, blue: 0.318, alpha: 1)
    public static let ttgLightFieldField01 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let ttgLightFieldField02 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let ttgLightFocusFocus = UIColor(red: 0.000, green: 0.522, blue: 1.000, alpha: 1)
    public static let ttgLightIconIconDisabled = UIColor(red: 0.588, green: 0.588, blue: 0.624, alpha: 1)
    public static let ttgLightIconIconOnColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let ttgLightIconIconOnColorDisabled = UIColor(red: 0.588, green: 0.588, blue: 0.624, alpha: 1)
    public static let ttgLightIconIconPrimary = UIColor(red: 0.043, green: 0.043, blue: 0.063, alpha: 1)
    public static let ttgLightIconIconSecondary = UIColor(red: 0.392, green: 0.388, blue: 0.455, alpha: 1)
    public static let ttgLightIconIconTab = UIColor(red: 0.392, green: 0.388, blue: 0.455, alpha: 1)
    public static let ttgLightLayerLayer01 = UIColor(red: 0.918, green: 0.918, blue: 0.925, alpha: 1)
    public static let ttgLightLayerLayer02 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let ttgLightLayerLayer03 = UIColor(red: 0.918, green: 0.918, blue: 0.925, alpha: 1)
    public static let ttgLightLayerLayerHover01 = UIColor(red: 0.835, green: 0.835, blue: 0.851, alpha: 1)
    public static let ttgLightLayerLayerHover02 = UIColor(red: 0.835, green: 0.835, blue: 0.851, alpha: 1)
    public static let ttgLightLayerLayerHover03 = UIColor(red: 0.835, green: 0.835, blue: 0.851, alpha: 1)
    public static let ttgLightLayerLayerSelectedInverse = UIColor(red: 0.043, green: 0.043, blue: 0.063, alpha: 1)
    public static let ttgLightLayerLayerTransparent = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let ttgLightLayerLayerTransparentHover = UIColor(red: 0.671, green: 0.671, blue: 0.698, alpha: 1)
    public static let ttgLightLinkLinkInverse = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let ttgLightLinkLinkPrimary = UIColor(red: 0.043, green: 0.043, blue: 0.063, alpha: 1)
    public static let ttgLightLinkLinkPrimaryHover = UIColor(red: 1.000, green: 0.071, blue: 0.149, alpha: 1)
    public static let ttgLightMiscellaneousOverlay = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let ttgLightNotificationsNotificationActionHover = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let ttgLightNotificationsNotificationActionTertiaryInverse = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let ttgLightNotificationsNotificationActionTertiaryInverseHover = UIColor(red: 0.957, green: 0.957, blue: 0.957, alpha: 1)
    public static let ttgLightNotificationsNotificationActionTertiaryInverseText = UIColor(red: 0.086, green: 0.086, blue: 0.086, alpha: 1)
    public static let ttgLightNotificationsNotificationErrorBackground = UIColor(red: 1.000, green: 0.945, blue: 0.945, alpha: 1)
    public static let ttgLightNotificationsNotificationInfoBackground = UIColor(red: 0.929, green: 0.961, blue: 1.000, alpha: 1)
    public static let ttgLightNotificationsNotificationSuccessBackground = UIColor(red: 0.871, green: 0.984, blue: 0.902, alpha: 1)
    public static let ttgLightNotificationsNotificationWarningBackground = UIColor(red: 0.988, green: 0.957, blue: 0.839, alpha: 1)
    public static let ttgLightNotificationsSupportErrorBorder = UIColor(red: 0.855, green: 0.118, blue: 0.157, alpha: 0.30196078431372547)
    public static let ttgLightNotificationsSupportInfoBorder = UIColor(red: 0.000, green: 0.263, blue: 0.808, alpha: 0.30196078431372547)
    public static let ttgLightNotificationsSupportSuccessBorder = UIColor(red: 0.141, green: 0.631, blue: 0.282, alpha: 0.30196078431372547)
    public static let ttgLightNotificationsSupportWarningBorder = UIColor(red: 0.945, green: 0.761, blue: 0.106, alpha: 0.30196078431372547)
    public static let ttgLightSupportInverseSupportError = UIColor(red: 1.000, green: 0.059, blue: 0.341, alpha: 1)
    public static let ttgLightSupportInverseSupportInfo = UIColor(red: 0.086, green: 0.561, blue: 1.000, alpha: 1)
    public static let ttgLightSupportInverseSupportSuccess = UIColor(red: 0.090, green: 0.796, blue: 0.286, alpha: 1)
    public static let ttgLightSupportInverseSupportWarning = UIColor(red: 0.980, green: 0.573, blue: 0.098, alpha: 1)
    public static let ttgLightSupportSupportError = UIColor(red: 0.800, green: 0.055, blue: 0.118, alpha: 1)
    public static let ttgLightSupportSupportInfo = UIColor(red: 0.000, green: 0.416, blue: 0.800, alpha: 1)
    public static let ttgLightSupportSupportSuccess = UIColor(red: 0.000, green: 0.584, blue: 0.165, alpha: 1)
    public static let ttgLightSupportSupportWarning = UIColor(red: 0.800, green: 0.498, blue: 0.141, alpha: 1)
    public static let ttgLightTagBlueBackground = UIColor(red: 0.898, green: 0.953, blue: 1.000, alpha: 1)
    public static let ttgLightTagBlueHover = UIColor(red: 0.800, green: 0.906, blue: 1.000, alpha: 1)
    public static let ttgLightTagBlueText = UIColor(red: 0.000, green: 0.314, blue: 0.600, alpha: 1)
    public static let ttgLightTagBrandText = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let ttgLightTagDeepblueBackground = UIColor(red: 0.000, green: 0.522, blue: 1.000, alpha: 1)
    public static let ttgLightTagDeepblueHover = UIColor(red: 0.000, green: 0.416, blue: 0.800, alpha: 1)
    public static let ttgLightTagDeepblueText = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let ttgLightTagGrayBackground = UIColor(red: 0.918, green: 0.918, blue: 0.925, alpha: 1)
    public static let ttgLightTagGrayHover = UIColor(red: 0.835, green: 0.835, blue: 0.851, alpha: 1)
    public static let ttgLightTagGrayText = UIColor(red: 0.173, green: 0.173, blue: 0.247, alpha: 1)
    public static let ttgLightTagGreenBackground = UIColor(red: 0.898, green: 0.973, blue: 0.922, alpha: 1)
    public static let ttgLightTagGreenHover = UIColor(red: 0.800, green: 0.945, blue: 0.839, alpha: 1)
    public static let ttgLightTagGreenText = UIColor(red: 0.000, green: 0.439, blue: 0.122, alpha: 1)
    public static let ttgLightTagOrangeBackground = UIColor(red: 1.000, green: 0.961, blue: 0.914, alpha: 1)
    public static let ttgLightTagOrangeHover = UIColor(red: 0.996, green: 0.906, blue: 0.800, alpha: 1)
    public static let ttgLightTagOrangeText = UIColor(red: 0.780, green: 0.420, blue: 0.000, alpha: 1)
    public static let ttgLightTagPurpleBackground = UIColor(red: 0.957, green: 0.918, blue: 0.992, alpha: 1)
    public static let ttgLightTagPurpleHover = UIColor(red: 0.910, green: 0.835, blue: 0.984, alpha: 1)
    public static let ttgLightTagPurpleText = UIColor(red: 0.435, green: 0.137, blue: 0.729, alpha: 1)
    public static let ttgLightTagRedBackground = UIColor(red: 1.000, green: 0.906, blue: 0.933, alpha: 1)
    public static let ttgLightTagRedHover = UIColor(red: 1.000, green: 0.812, blue: 0.867, alpha: 1)
    public static let ttgLightTagRedText = UIColor(red: 0.600, green: 0.043, blue: 0.090, alpha: 1)
    public static let ttgLightTextTextDisabled = UIColor(red: 0.588, green: 0.588, blue: 0.624, alpha: 1)
    public static let ttgLightTextTextDiscount = UIColor(red: 1.000, green: 0.071, blue: 0.149, alpha: 1)
    public static let ttgLightTextTextError = UIColor(red: 0.600, green: 0.043, blue: 0.090, alpha: 1)
    public static let ttgLightTextTextHelper = UIColor(red: 0.239, green: 0.235, blue: 0.318, alpha: 1)
    public static let ttgLightTextTextInverse = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let ttgLightTextTextOnColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let ttgLightTextTextOnColorDisabled = UIColor(red: 0.918, green: 0.918, blue: 0.925, alpha: 1)
    public static let ttgLightTextTextPlaceholder = UIColor(red: 0.588, green: 0.588, blue: 0.624, alpha: 1)
    public static let ttgLightTextTextPrimary = UIColor(red: 0.043, green: 0.043, blue: 0.063, alpha: 1)
    public static let ttgLightTextTextSecondary = UIColor(red: 0.392, green: 0.388, blue: 0.455, alpha: 1)
    public static let ttgLightTransparentTransparent = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
}
